name: Remote Desktop Setup

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Download and Extract ngrok
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip
      shell: pwsh

    - name: Setup RDP and User
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
      shell: pwsh

    - name: Authenticate ngrok with Retry
      run: |
        $maxRetries = 5
        for ($i = 1; $i -le $maxRetries; $i++) {
            try {
                .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
                break
            }
            catch {
                Write-Host "ngrok authentication failed. Attempt $i of $maxRetries."
                if ($i -eq $maxRetries) { throw }
                Start-Sleep -Seconds 30
            }
        }
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      shell: pwsh

    - name: Create ngrok Tunnel
      run: .\ngrok\ngrok.exe tcp 3389
      shell: pwsh

    - name: Keep Alive Script
      run: |
        while ($true) {
            Write-Host "Keeping session alive..."
            Start-Sleep -Seconds 300  # Wait for 5 minutes
            Test-Connection -ComputerName google.com -Count 1
        }
      shell: pwsh
